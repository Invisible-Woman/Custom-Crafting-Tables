// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.9"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: "com.matthewprenger.cursegradle"

compileJava.options.encoding = 'UTF-8'

repositories {
    maven { // JEI repo
        name "JEI"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { // CraftTweaker repo
        name 'MineTweaker3'
        url "http://maven.blamejared.com"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

version = mc_version + '-' + version_major + '.' + version_minor + '.' + version_patch
group = package_group
archivesBaseName = mod_id

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    makeObfSourceJar = false
    useDepAts = false

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    classifier = ''
    manifest.mainAttributes(
            "Built-By": "${author}",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Built-On": "${mc_version}-${forge_version}"
    )

}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

dependencies {
    deobfCompile "mezz.jei:jei_${mc_version}:+"

    compile("CraftTweaker2:CraftTweaker2-API:${crafttweaker_version}") {
        exclude module: "asm-debug-all"
    }
    compile "CraftTweaker2:ZenScript:${zenscript_version}"
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

curseforge {
    apiKey = project.hasProperty('api_token') ? project.api_token : '0'
    project {
        id = '256411'
        changelog = file('src/main/resources/changelog.md')
        changelogType = 'markdown'
        releaseType = 'release'
        relations {
            requiredLibrary 'thedragonlib'
            requiredLibrary 'crafttweaker'
            optionalLibrary 'jei'
        }
    }
}
